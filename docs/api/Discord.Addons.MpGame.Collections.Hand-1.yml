### YamlMime:ManagedReference
items:
- uid: Discord.Addons.MpGame.Collections.Hand`1
  commentId: T:Discord.Addons.MpGame.Collections.Hand`1
  id: Hand`1
  parent: Discord.Addons.MpGame.Collections
  children:
  - Discord.Addons.MpGame.Collections.Hand`1.#ctor
  - Discord.Addons.MpGame.Collections.Hand`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - Discord.Addons.MpGame.Collections.Hand`1.Add(`0)
  - Discord.Addons.MpGame.Collections.Hand`1.Cards
  - Discord.Addons.MpGame.Collections.Hand`1.Clear
  - Discord.Addons.MpGame.Collections.Hand`1.Count
  - Discord.Addons.MpGame.Collections.Hand`1.Order(System.Func{System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0}})
  - Discord.Addons.MpGame.Collections.Hand`1.TakeAt(System.Int32)
  - Discord.Addons.MpGame.Collections.Hand`1.TakeFirstOrDefault(System.Func{`0,System.Boolean})
  langs:
  - csharp
  - vb
  name: Hand<TCard>
  nameWithType: Hand<TCard>
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>
  type: Class
  source:
    remote:
      path: src/Discord.Addons.MpGame/Collections/Hand.cs
      branch: master
      repo: git@github.com:Joe4evr/Discord.Addons.git
    id: Hand
    path: ../src/Discord.Addons.MpGame/Collections/Hand.cs
    startLine: 14
  assemblies:
  - Discord.Addons.MpGame
  namespace: Discord.Addons.MpGame.Collections
  summary: "\nSimilar to <xref href=\"Discord.Addons.MpGame.Collections.Pile%601\" data-throw-if-not-resolved=\"false\"></xref> but specialized\nand optimized for representing a hand of cards.\n"
  remarks: This class is not thread-safe.
  example: []
  syntax:
    content: >-
      public sealed class Hand<TCard>
          where TCard : class
    typeParameters:
    - id: TCard
      description: The card type.
    content.vb: Public NotInheritable Class Hand(Of TCard As Class)
  inheritance:
  - System.Object
  nameWithType.vb: Hand(Of TCard)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard)
  name.vb: Hand(Of TCard)
- uid: Discord.Addons.MpGame.Collections.Hand`1.Count
  commentId: P:Discord.Addons.MpGame.Collections.Hand`1.Count
  id: Count
  parent: Discord.Addons.MpGame.Collections.Hand`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: Hand<TCard>.Count
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.Count
  type: Property
  source:
    remote:
      path: src/Discord.Addons.MpGame/Collections/Hand.cs
      branch: master
      repo: git@github.com:Joe4evr/Discord.Addons.git
    id: Count
    path: ../src/Discord.Addons.MpGame/Collections/Hand.cs
    startLine: 23
  assemblies:
  - Discord.Addons.MpGame
  namespace: Discord.Addons.MpGame.Collections
  summary: "\nThe amount of cards currently in the hand.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Discord.Addons.MpGame.Collections.Hand`1.Count*
  nameWithType.vb: Hand(Of TCard).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).Count
- uid: Discord.Addons.MpGame.Collections.Hand`1.Cards
  commentId: P:Discord.Addons.MpGame.Collections.Hand`1.Cards
  id: Cards
  parent: Discord.Addons.MpGame.Collections.Hand`1
  langs:
  - csharp
  - vb
  name: Cards
  nameWithType: Hand<TCard>.Cards
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.Cards
  type: Property
  source:
    remote:
      path: src/Discord.Addons.MpGame/Collections/Hand.cs
      branch: master
      repo: git@github.com:Joe4evr/Discord.Addons.git
    id: Cards
    path: ../src/Discord.Addons.MpGame/Collections/Hand.cs
    startLine: 28
  assemblies:
  - Discord.Addons.MpGame
  namespace: Discord.Addons.MpGame.Collections
  summary: "\nThe cards inside this hand.\n"
  example: []
  syntax:
    content: public IReadOnlyCollection<TCard> Cards { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{{TCard}}
    content.vb: Public ReadOnly Property Cards As IReadOnlyCollection(Of TCard)
  overload: Discord.Addons.MpGame.Collections.Hand`1.Cards*
  nameWithType.vb: Hand(Of TCard).Cards
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).Cards
- uid: Discord.Addons.MpGame.Collections.Hand`1.#ctor
  commentId: M:Discord.Addons.MpGame.Collections.Hand`1.#ctor
  id: '#ctor'
  parent: Discord.Addons.MpGame.Collections.Hand`1
  langs:
  - csharp
  - vb
  name: Hand()
  nameWithType: Hand<TCard>.Hand()
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.Hand()
  type: Constructor
  source:
    remote:
      path: src/Discord.Addons.MpGame/Collections/Hand.cs
      branch: master
      repo: git@github.com:Joe4evr/Discord.Addons.git
    id: .ctor
    path: ../src/Discord.Addons.MpGame/Collections/Hand.cs
    startLine: 33
  assemblies:
  - Discord.Addons.MpGame
  namespace: Discord.Addons.MpGame.Collections
  summary: "\nInitializes a new <xref href=\"Discord.Addons.MpGame.Collections.Hand%601\" data-throw-if-not-resolved=\"false\"></xref> to an empty state.\n"
  example: []
  syntax:
    content: public Hand()
    content.vb: Public Sub New
  overload: Discord.Addons.MpGame.Collections.Hand`1.#ctor*
  nameWithType.vb: Hand(Of TCard).Hand()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).Hand()
- uid: Discord.Addons.MpGame.Collections.Hand`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Discord.Addons.MpGame.Collections.Hand`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: Discord.Addons.MpGame.Collections.Hand`1
  langs:
  - csharp
  - vb
  name: Hand(IEnumerable<TCard>)
  nameWithType: Hand<TCard>.Hand(IEnumerable<TCard>)
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.Hand(System.Collections.Generic.IEnumerable<TCard>)
  type: Constructor
  source:
    remote:
      path: src/Discord.Addons.MpGame/Collections/Hand.cs
      branch: master
      repo: git@github.com:Joe4evr/Discord.Addons.git
    id: .ctor
    path: ../src/Discord.Addons.MpGame/Collections/Hand.cs
    startLine: 42
  assemblies:
  - Discord.Addons.MpGame
  namespace: Discord.Addons.MpGame.Collections
  summary: "\nInitializes a new <xref href=\"Discord.Addons.MpGame.Collections.Hand%601\" data-throw-if-not-resolved=\"false\"></xref> with the specified cards.\n"
  example: []
  syntax:
    content: public Hand(IEnumerable<TCard> cards)
    parameters:
    - id: cards
      type: System.Collections.Generic.IEnumerable{{TCard}}
      description: The cards to put in the hand.
    content.vb: Public Sub New(cards As IEnumerable(Of TCard))
  overload: Discord.Addons.MpGame.Collections.Hand`1.#ctor*
  nameWithType.vb: Hand(Of TCard).Hand(IEnumerable(Of TCard))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).Hand(System.Collections.Generic.IEnumerable(Of TCard))
  name.vb: Hand(IEnumerable(Of TCard))
- uid: Discord.Addons.MpGame.Collections.Hand`1.Add(`0)
  commentId: M:Discord.Addons.MpGame.Collections.Hand`1.Add(`0)
  id: Add(`0)
  parent: Discord.Addons.MpGame.Collections.Hand`1
  langs:
  - csharp
  - vb
  name: Add(TCard)
  nameWithType: Hand<TCard>.Add(TCard)
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.Add(TCard)
  type: Method
  source:
    remote:
      path: src/Discord.Addons.MpGame/Collections/Hand.cs
      branch: master
      repo: git@github.com:Joe4evr/Discord.Addons.git
    id: Add
    path: ../src/Discord.Addons.MpGame/Collections/Hand.cs
    startLine: 51
  assemblies:
  - Discord.Addons.MpGame
  namespace: Discord.Addons.MpGame.Collections
  summary: "\nAdds a card to the hand.\n"
  example: []
  syntax:
    content: public void Add(TCard card)
    parameters:
    - id: card
      type: '{TCard}'
      description: The card to add.
    content.vb: Public Sub Add(card As TCard)
  overload: Discord.Addons.MpGame.Collections.Hand`1.Add*
  nameWithType.vb: Hand(Of TCard).Add(TCard)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).Add(TCard)
- uid: Discord.Addons.MpGame.Collections.Hand`1.TakeAt(System.Int32)
  commentId: M:Discord.Addons.MpGame.Collections.Hand`1.TakeAt(System.Int32)
  id: TakeAt(System.Int32)
  parent: Discord.Addons.MpGame.Collections.Hand`1
  langs:
  - csharp
  - vb
  name: TakeAt(Int32)
  nameWithType: Hand<TCard>.TakeAt(Int32)
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.TakeAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/Discord.Addons.MpGame/Collections/Hand.cs
      branch: master
      repo: git@github.com:Joe4evr/Discord.Addons.git
    id: TakeAt
    path: ../src/Discord.Addons.MpGame/Collections/Hand.cs
    startLine: 59
  assemblies:
  - Discord.Addons.MpGame
  namespace: Discord.Addons.MpGame.Collections
  summary: "\nTakes a card from the given index.\n"
  example: []
  syntax:
    content: public TCard TakeAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the card to take.
    return:
      type: '{TCard}'
    content.vb: Public Function TakeAt(index As Integer) As TCard
  overload: Discord.Addons.MpGame.Collections.Hand`1.TakeAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: >-
      <code data-dev-comment-type="paramref" class="paramref">index</code>
          was less than 0 or greater than the pile&apos;s current size.
  nameWithType.vb: Hand(Of TCard).TakeAt(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).TakeAt(System.Int32)
- uid: Discord.Addons.MpGame.Collections.Hand`1.TakeFirstOrDefault(System.Func{`0,System.Boolean})
  commentId: M:Discord.Addons.MpGame.Collections.Hand`1.TakeFirstOrDefault(System.Func{`0,System.Boolean})
  id: TakeFirstOrDefault(System.Func{`0,System.Boolean})
  parent: Discord.Addons.MpGame.Collections.Hand`1
  langs:
  - csharp
  - vb
  name: TakeFirstOrDefault(Func<TCard, Boolean>)
  nameWithType: Hand<TCard>.TakeFirstOrDefault(Func<TCard, Boolean>)
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.TakeFirstOrDefault(System.Func<TCard, System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Discord.Addons.MpGame/Collections/Hand.cs
      branch: master
      repo: git@github.com:Joe4evr/Discord.Addons.git
    id: TakeFirstOrDefault
    path: ../src/Discord.Addons.MpGame/Collections/Hand.cs
    startLine: 77
  assemblies:
  - Discord.Addons.MpGame
  namespace: Discord.Addons.MpGame.Collections
  summary: "\nTakes the first card that matches a given predicate.\n"
  example: []
  syntax:
    content: public TCard TakeFirstOrDefault(Func<TCard, bool> predicate)
    parameters:
    - id: predicate
      type: System.Func{{TCard},System.Boolean}
      description: The predicate to match.
    return:
      type: '{TCard}'
      description: The card, or <xref uid="langword_csharp_null" name="null" href=""></xref> if no match found.
    content.vb: Public Function TakeFirstOrDefault(predicate As Func(Of TCard, Boolean)) As TCard
  overload: Discord.Addons.MpGame.Collections.Hand`1.TakeFirstOrDefault*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">predicate</code> was <xref uid="langword_csharp_null" name="null" href=""></xref>.
  nameWithType.vb: Hand(Of TCard).TakeFirstOrDefault(Func(Of TCard, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).TakeFirstOrDefault(System.Func(Of TCard, System.Boolean))
  name.vb: TakeFirstOrDefault(Func(Of TCard, Boolean))
- uid: Discord.Addons.MpGame.Collections.Hand`1.Clear
  commentId: M:Discord.Addons.MpGame.Collections.Hand`1.Clear
  id: Clear
  parent: Discord.Addons.MpGame.Collections.Hand`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: Hand<TCard>.Clear()
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.Clear()
  type: Method
  source:
    remote:
      path: src/Discord.Addons.MpGame/Collections/Hand.cs
      branch: master
      repo: git@github.com:Joe4evr/Discord.Addons.git
    id: Clear
    path: ../src/Discord.Addons.MpGame/Collections/Hand.cs
    startLine: 94
  assemblies:
  - Discord.Addons.MpGame
  namespace: Discord.Addons.MpGame.Collections
  summary: "\nClears the entire hand and returns the cards that were in it.\n"
  example: []
  syntax:
    content: public IReadOnlyCollection<TCard> Clear()
    return:
      type: System.Collections.Generic.IReadOnlyCollection{{TCard}}
      description: The collection as it was before it is cleared.
    content.vb: Public Function Clear As IReadOnlyCollection(Of TCard)
  overload: Discord.Addons.MpGame.Collections.Hand`1.Clear*
  nameWithType.vb: Hand(Of TCard).Clear()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).Clear()
- uid: Discord.Addons.MpGame.Collections.Hand`1.Order(System.Func{System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0}})
  commentId: M:Discord.Addons.MpGame.Collections.Hand`1.Order(System.Func{System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0}})
  id: Order(System.Func{System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0}})
  parent: Discord.Addons.MpGame.Collections.Hand`1
  langs:
  - csharp
  - vb
  name: Order(Func<IEnumerable<TCard>, IEnumerable<TCard>>)
  nameWithType: Hand<TCard>.Order(Func<IEnumerable<TCard>, IEnumerable<TCard>>)
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.Order(System.Func<System.Collections.Generic.IEnumerable<TCard>, System.Collections.Generic.IEnumerable<TCard>>)
  type: Method
  source:
    remote:
      path: src/Discord.Addons.MpGame/Collections/Hand.cs
      branch: master
      repo: git@github.com:Joe4evr/Discord.Addons.git
    id: Order
    path: ../src/Discord.Addons.MpGame/Collections/Hand.cs
    startLine: 108
  assemblies:
  - Discord.Addons.MpGame
  namespace: Discord.Addons.MpGame.Collections
  summary: "\nOrders the cards using the specified function.\n"
  example: []
  syntax:
    content: public void Order(Func<IEnumerable<TCard>, IEnumerable<TCard>> orderFunc)
    parameters:
    - id: orderFunc
      type: System.Func{System.Collections.Generic.IEnumerable{{TCard}},System.Collections.Generic.IEnumerable{{TCard}}}
      description: >-
        A function that produces an

        <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> in a new order.

        This function receives the cards currently in

        the hand as its argument.
    content.vb: Public Sub Order(orderFunc As Func(Of IEnumerable(Of TCard), IEnumerable(Of TCard)))
  overload: Discord.Addons.MpGame.Collections.Hand`1.Order*
  nameWithType.vb: Hand(Of TCard).Order(Func(Of IEnumerable(Of TCard), IEnumerable(Of TCard)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).Order(System.Func(Of System.Collections.Generic.IEnumerable(Of TCard), System.Collections.Generic.IEnumerable(Of TCard)))
  name.vb: Order(Func(Of IEnumerable(Of TCard), IEnumerable(Of TCard)))
references:
- uid: Discord.Addons.MpGame.Collections.Pile`1
  commentId: T:Discord.Addons.MpGame.Collections.Pile`1
  isExternal: false
  name: Pile<TCard>
  nameWithType: Pile<TCard>
  fullName: Discord.Addons.MpGame.Collections.Pile<TCard>
  nameWithType.vb: Pile(Of TCard)
  fullName.vb: Discord.Addons.MpGame.Collections.Pile(Of TCard)
  name.vb: Pile(Of TCard)
  spec.csharp:
  - uid: Discord.Addons.MpGame.Collections.Pile`1
    name: Pile
    nameWithType: Pile
    fullName: Discord.Addons.MpGame.Collections.Pile
  - name: <
    nameWithType: <
    fullName: <
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Addons.MpGame.Collections.Pile`1
    name: Pile
    nameWithType: Pile
    fullName: Discord.Addons.MpGame.Collections.Pile
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Addons.MpGame.Collections
  commentId: N:Discord.Addons.MpGame.Collections
  isExternal: false
  name: Discord.Addons.MpGame.Collections
  nameWithType: Discord.Addons.MpGame.Collections
  fullName: Discord.Addons.MpGame.Collections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Addons.MpGame.Collections.Hand`1.Count*
  commentId: Overload:Discord.Addons.MpGame.Collections.Hand`1.Count
  isExternal: false
  name: Count
  nameWithType: Hand<TCard>.Count
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.Count
  nameWithType.vb: Hand(Of TCard).Count
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.Addons.MpGame.Collections.Hand`1.Cards*
  commentId: Overload:Discord.Addons.MpGame.Collections.Hand`1.Cards
  isExternal: false
  name: Cards
  nameWithType: Hand<TCard>.Cards
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.Cards
  nameWithType.vb: Hand(Of TCard).Cards
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).Cards
- uid: System.Collections.Generic.IReadOnlyCollection{{TCard}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<TCard>
  nameWithType: IReadOnlyCollection<TCard>
  fullName: System.Collections.Generic.IReadOnlyCollection<TCard>
  nameWithType.vb: IReadOnlyCollection(Of TCard)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of TCard)
  name.vb: IReadOnlyCollection(Of TCard)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Discord.Addons.MpGame.Collections.Hand`1
  commentId: T:Discord.Addons.MpGame.Collections.Hand`1
  isExternal: false
  name: Hand<TCard>
  nameWithType: Hand<TCard>
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>
  nameWithType.vb: Hand(Of TCard)
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard)
  name.vb: Hand(Of TCard)
  spec.csharp:
  - uid: Discord.Addons.MpGame.Collections.Hand`1
    name: Hand
    nameWithType: Hand
    fullName: Discord.Addons.MpGame.Collections.Hand
  - name: <
    nameWithType: <
    fullName: <
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Addons.MpGame.Collections.Hand`1
    name: Hand
    nameWithType: Hand
    fullName: Discord.Addons.MpGame.Collections.Hand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Addons.MpGame.Collections.Hand`1.#ctor*
  commentId: Overload:Discord.Addons.MpGame.Collections.Hand`1.#ctor
  isExternal: false
  name: Hand
  nameWithType: Hand<TCard>.Hand
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.Hand
  nameWithType.vb: Hand(Of TCard).Hand
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).Hand
- uid: System.Collections.Generic.IEnumerable{{TCard}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TCard>
  nameWithType: IEnumerable<TCard>
  fullName: System.Collections.Generic.IEnumerable<TCard>
  nameWithType.vb: IEnumerable(Of TCard)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TCard)
  name.vb: IEnumerable(Of TCard)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Addons.MpGame.Collections.Hand`1.Add*
  commentId: Overload:Discord.Addons.MpGame.Collections.Hand`1.Add
  isExternal: false
  name: Add
  nameWithType: Hand<TCard>.Add
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.Add
  nameWithType.vb: Hand(Of TCard).Add
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).Add
- uid: '{TCard}'
  commentId: '!:TCard'
  definition: TCard
  name: TCard
  nameWithType: TCard
  fullName: TCard
- uid: TCard
  isExternal: false
  name: TCard
  nameWithType: TCard
  fullName: TCard
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: Discord.Addons.MpGame.Collections.Hand`1.TakeAt*
  commentId: Overload:Discord.Addons.MpGame.Collections.Hand`1.TakeAt
  isExternal: false
  name: TakeAt
  nameWithType: Hand<TCard>.TakeAt
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.TakeAt
  nameWithType.vb: Hand(Of TCard).TakeAt
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).TakeAt
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Discord.Addons.MpGame.Collections.Hand`1.TakeFirstOrDefault*
  commentId: Overload:Discord.Addons.MpGame.Collections.Hand`1.TakeFirstOrDefault
  isExternal: false
  name: TakeFirstOrDefault
  nameWithType: Hand<TCard>.TakeFirstOrDefault
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.TakeFirstOrDefault
  nameWithType.vb: Hand(Of TCard).TakeFirstOrDefault
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).TakeFirstOrDefault
- uid: System.Func{{TCard},System.Boolean}
  commentId: T:System.Func{`0,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<TCard, Boolean>
  nameWithType: Func<TCard, Boolean>
  fullName: System.Func<TCard, System.Boolean>
  nameWithType.vb: Func(Of TCard, Boolean)
  fullName.vb: System.Func(Of TCard, System.Boolean)
  name.vb: Func(Of TCard, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Addons.MpGame.Collections.Hand`1.Clear*
  commentId: Overload:Discord.Addons.MpGame.Collections.Hand`1.Clear
  isExternal: false
  name: Clear
  nameWithType: Hand<TCard>.Clear
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.Clear
  nameWithType.vb: Hand(Of TCard).Clear
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).Clear
- uid: Discord.Addons.MpGame.Collections.Hand`1.Order*
  commentId: Overload:Discord.Addons.MpGame.Collections.Hand`1.Order
  isExternal: false
  name: Order
  nameWithType: Hand<TCard>.Order
  fullName: Discord.Addons.MpGame.Collections.Hand<TCard>.Order
  nameWithType.vb: Hand(Of TCard).Order
  fullName.vb: Discord.Addons.MpGame.Collections.Hand(Of TCard).Order
- uid: System.Func{System.Collections.Generic.IEnumerable{{TCard}},System.Collections.Generic.IEnumerable{{TCard}}}
  commentId: T:System.Func{System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0}}
  parent: System
  definition: System.Func`2
  name: Func<IEnumerable<TCard>, IEnumerable<TCard>>
  nameWithType: Func<IEnumerable<TCard>, IEnumerable<TCard>>
  fullName: System.Func<System.Collections.Generic.IEnumerable<TCard>, System.Collections.Generic.IEnumerable<TCard>>
  nameWithType.vb: Func(Of IEnumerable(Of TCard), IEnumerable(Of TCard))
  fullName.vb: System.Func(Of System.Collections.Generic.IEnumerable(Of TCard), System.Collections.Generic.IEnumerable(Of TCard))
  name.vb: Func(Of IEnumerable(Of TCard), IEnumerable(Of TCard))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCard
    nameWithType: TCard
    fullName: TCard
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
