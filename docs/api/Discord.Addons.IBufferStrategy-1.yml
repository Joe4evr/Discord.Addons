### YamlMime:ManagedReference
items:
- uid: Discord.Addons.IBufferStrategy`1
  commentId: T:Discord.Addons.IBufferStrategy`1
  id: IBufferStrategy`1
  parent: Discord.Addons
  children:
  - Discord.Addons.IBufferStrategy`1.GetBuffer(System.Int32)
  - Discord.Addons.IBufferStrategy`1.ReturnBuffer(`0[])
  langs:
  - csharp
  - vb
  name: IBufferStrategy<T>
  nameWithType: IBufferStrategy<T>
  fullName: Discord.Addons.IBufferStrategy<T>
  type: Interface
  source:
    remote:
      path: src/Discord.Addons.MpGame/Extensions/IBufferStrategy.cs
      branch: master
      repo: git@github.com:Joe4evr/Discord.Addons.git
    id: IBufferStrategy
    path: ../src/Discord.Addons.MpGame/Extensions/IBufferStrategy.cs
    startLine: 6
  assemblies:
  - Discord.Addons.MpGame
  namespace: Discord.Addons
  summary: "\nDefines a strategy to use for managing temporary buffers.\n"
  example: []
  syntax:
    content: public interface IBufferStrategy<T>
    typeParameters:
    - id: T
      description: The object type.
    content.vb: Public Interface IBufferStrategy(Of T)
  nameWithType.vb: IBufferStrategy(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Discord.Addons.IBufferStrategy(Of T)
  name.vb: IBufferStrategy(Of T)
- uid: Discord.Addons.IBufferStrategy`1.GetBuffer(System.Int32)
  commentId: M:Discord.Addons.IBufferStrategy`1.GetBuffer(System.Int32)
  id: GetBuffer(System.Int32)
  parent: Discord.Addons.IBufferStrategy`1
  langs:
  - csharp
  - vb
  name: GetBuffer(Int32)
  nameWithType: IBufferStrategy<T>.GetBuffer(Int32)
  fullName: Discord.Addons.IBufferStrategy<T>.GetBuffer(System.Int32)
  type: Method
  source:
    remote:
      path: src/Discord.Addons.MpGame/Extensions/IBufferStrategy.cs
      branch: master
      repo: git@github.com:Joe4evr/Discord.Addons.git
    id: GetBuffer
    path: ../src/Discord.Addons.MpGame/Extensions/IBufferStrategy.cs
    startLine: 13
  assemblies:
  - Discord.Addons.MpGame
  namespace: Discord.Addons
  summary: "\nGets a buffer of the specified size.\n"
  example: []
  syntax:
    content: T[] GetBuffer(int size)
    parameters:
    - id: size
      type: System.Int32
      description: The minimum wanted size.
    return:
      type: '{T}[]'
      description: An arry that is at least <code data-dev-comment-type="paramref" class="paramref">size</code> elements long.
    content.vb: Function GetBuffer(size As Integer) As T()
  overload: Discord.Addons.IBufferStrategy`1.GetBuffer*
  nameWithType.vb: IBufferStrategy(Of T).GetBuffer(Int32)
  fullName.vb: Discord.Addons.IBufferStrategy(Of T).GetBuffer(System.Int32)
- uid: Discord.Addons.IBufferStrategy`1.ReturnBuffer(`0[])
  commentId: M:Discord.Addons.IBufferStrategy`1.ReturnBuffer(`0[])
  id: ReturnBuffer(`0[])
  parent: Discord.Addons.IBufferStrategy`1
  langs:
  - csharp
  - vb
  name: ReturnBuffer(T[])
  nameWithType: IBufferStrategy<T>.ReturnBuffer(T[])
  fullName: Discord.Addons.IBufferStrategy<T>.ReturnBuffer(T[])
  type: Method
  source:
    remote:
      path: src/Discord.Addons.MpGame/Extensions/IBufferStrategy.cs
      branch: master
      repo: git@github.com:Joe4evr/Discord.Addons.git
    id: ReturnBuffer
    path: ../src/Discord.Addons.MpGame/Extensions/IBufferStrategy.cs
    startLine: 19
  assemblies:
  - Discord.Addons.MpGame
  namespace: Discord.Addons
  summary: "\nReturns the buffer if it was rented from a pool.\n"
  example: []
  syntax:
    content: void ReturnBuffer(T[] buffer)
    parameters:
    - id: buffer
      type: '{T}[]'
      description: The buffer to return.
    content.vb: Sub ReturnBuffer(buffer As T())
  overload: Discord.Addons.IBufferStrategy`1.ReturnBuffer*
  nameWithType.vb: IBufferStrategy(Of T).ReturnBuffer(T())
  fullName.vb: Discord.Addons.IBufferStrategy(Of T).ReturnBuffer(T())
  name.vb: ReturnBuffer(T())
references:
- uid: Discord.Addons
  commentId: N:Discord.Addons
  isExternal: false
  name: Discord.Addons
  nameWithType: Discord.Addons
  fullName: Discord.Addons
- uid: Discord.Addons.IBufferStrategy`1.GetBuffer*
  commentId: Overload:Discord.Addons.IBufferStrategy`1.GetBuffer
  isExternal: false
  name: GetBuffer
  nameWithType: IBufferStrategy<T>.GetBuffer
  fullName: Discord.Addons.IBufferStrategy<T>.GetBuffer
  nameWithType.vb: IBufferStrategy(Of T).GetBuffer
  fullName.vb: Discord.Addons.IBufferStrategy(Of T).GetBuffer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: '{T}[]'
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Addons.IBufferStrategy`1.ReturnBuffer*
  commentId: Overload:Discord.Addons.IBufferStrategy`1.ReturnBuffer
  isExternal: false
  name: ReturnBuffer
  nameWithType: IBufferStrategy<T>.ReturnBuffer
  fullName: Discord.Addons.IBufferStrategy<T>.ReturnBuffer
  nameWithType.vb: IBufferStrategy(Of T).ReturnBuffer
  fullName.vb: Discord.Addons.IBufferStrategy(Of T).ReturnBuffer
